@startuml
'https://plantuml.com/class-diagram
class LMS
{
Branches: Branch
}
class Branch
{
 Libraries : Library
 BranchID : Integer
}
class Library {
  Name: String
  'Should it be a Library Class cuz it's a physical place?
  Location : String
  Clark: Librarian
  BooksList : BookList
  Users : User
  CurrentBorrowedList: BookList
   'Takes the info Of the user and the borrowed Books add it to the currentBorrowedBooks
  + Borrow()
  + login()
  + Reserve()
  + Retrieve()
}
'Could have an abstract class to implement the borrow function ?
class BookList {
  - Books: Book
  ' -BookDescriptions: BookDescription
 + Add()
 + Delete()
 + SearchByTitle()
 + SearchByAuthor()
 + Update()
}
class Book {
 - BookDescription: BookDescription
 - Stock
 'Could this be removed and replaced by unique ID instead?
 'Decrement the stock
 + Borrow()
 + Display()

}
class BookDescription {
  Author: User
  Publisher: String
  ISBN : Integer
  Title: String
  publicationDate : Date
  TableOfContents : List
  genre: String
  Summary : String
}
class User {
  ID : Integer
  BorrowedList : BookList
  'Adds the Book to the user's borrowedList
  + Borrow()
  'Remove the book from the user's borrowedList
  + Retrieve()
}
'Out of context ?
class Author{
AuthorID: Integer
}
abstract class Person{
  name:  String
  age: Integer
  Gender : Enum
  password : string
}

class Librarian {
     EmployeeID : Integer
}

class Borrow {
  - user : User
  - book : Book
  - Issue Date : Date
  - Due Date : Date
  - Fine : Float
  - FineStatus : Boolean
  + calculateFine()
  + Notify()
}

LMS "1" --> "*" Branch : Has
BookList "1" --> "*" Book : Holds
Book "1" --> "1" BookDescription : Has
Person "1" -->"*" Librarian : extends
Person "1" -->"*" User : extends
Person "1" -->"*" Author : extends
Library "1" --> "*" User : Has
Library "1" --> "1" BookList : Records
Library "1" --> "*" Librarian : Employs
User "1" --> "*" Book : Borrows
Librarian "1" --> "*" Borrow : Processes
Librarian "1" -->  "1" Library : Works in
Borrow "1" --> "1" User : Notifies
@enduml